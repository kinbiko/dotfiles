# Enable true-colors in vim etc.
# FIXME: Doesn't work yet. Any workaround I've found so far cause weird terminal issues
# like not being able to hit backspace or clear the screen.
set -g default-terminal "xterm-256color"
set -sa terminal-overrides ',xterm-256color:RGB'

setw -g xterm-keys on # Allow ctrl, shift, and alt keys to work as expected.

# Time to wait after 'esc' to determine if it's a function or meta key
# sequence. Not having this makes vim really annoying to use, as getting into
# normal mode takes forever.
set -s escape-time 0

# Make it so you don't have to hit the prefix every time you run a tmux
# command, and allow multiple tmux commands in quick succession
# (default was 500ms). Useful for resizing panes
set -sg repeat-time 600

# Allow focus events from the terminal to bubble through to tmux.
# E.g. clicking on a pane
set -s focus-events on

set -g prefix C-a # Change the prefix from the default ctrl+b to ctrl+a

setw -qg utf8 on # Expect UTF-8

# The maximum number of lines held in window history.
# I.e. scrolling up and down a tmux pane
set -g history-limit 25000 # boost history

# Usually, having windows be 1-indexed would make more sense, since most keyboards are 1234567890
# Mine is 01234
#         56789
set -g base-index 0
setw -g pane-base-index 0

set -g allow-rename off # After renaming the window, don't automatically rename it again
set -g renumber-windows on # Renumber windows when a window is closed

set -g status off # Don't need any status bars
set -g status-position top # But when I rename panes I want to look to the top of the screen

# New windows should have the same path as current window
bind c new-window -c "#{pane_current_path}"

# Pane navigation
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Pane resizing
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# Pane splitting
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -h -c '#{pane_current_path}'

# allow vim bindings to work as expected in tmux menus etc.
bind -T choice-mode-vi h send-keys -X tree-collapse
bind -T choice-mode-vi l send-keys -X tree-expand
run -b 'tmux bind -T choice-mode-vi K send-keys -X start-of-list 2> /dev/null'
run -b 'tmux bind -T choice-mode-vi J send-keys -X end-of-list 2> /dev/null'
bind -T choice-mode-vi H send-keys -X tree-collapse-all
bind -T choice-mode-vi L send-keys -X tree-expand-all
bind -T choice-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line

bind p paste-buffer # Paste most recent copied buffer

# Checks to see if we're in vim or fzf
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# If it's vim, then move within vim windows. Otherwise move within tmux panes
# If it's fzf, move up or down the fzf options with ctrl+j and ctrl+k
bind -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j) || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) || tmux select-pane -R"

setw -g mouse on # Enable mouse support (e.g. scrolling)

# Simplified version of https://github.com/tmux-plugins/tmux-urlview
bind "u" capture-pane -J \; save-buffer "/tmp/tmux-buffer" \; delete-buffer \; split-window -l 10 "urlview '/tmp/tmux-buffer'"
